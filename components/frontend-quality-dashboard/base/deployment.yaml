apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  creationTimestamp: null
  labels:
    app: quality-dashboard
    app.kubernetes.io/component: quality-frontend
    app.kubernetes.io/created-by: application-service
    app.kubernetes.io/instance: frontend-quality-dashboard
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: frontend-quality-dashboard
    app.kubernetes.io/part-of: quality-dashboard
    component: quality-frontend
  name: frontend-quality-dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: quality-dashboard
      app.kubernetes.io/instance: frontend-quality-dashboard
      component: quality-frontend
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: quality-dashboard
        app.kubernetes.io/component: quality-frontend
        app.kubernetes.io/instance: frontend-quality-dashboard
        app.kubernetes.io/name: quality-dashboard
        component: quality-frontend
    spec:
      containers:
      - env:
        - name: REACT_APP_API_SERVER_URL
          valueFrom:
            secretKeyRef:
              key: backend-route
              name: frontend-secrets
        - name: FRONTEND_REDIRECT_URI
          valueFrom:
            secretKeyRef:
              key: frontend-route
              name: frontend-secrets
        - name: DEX_ISSUER
          valueFrom:
            secretKeyRef:
              key: dex-issuer
              name: quality-dashboard-secrets
        - name: DEX_APPLICATION_ID
          valueFrom:
            secretKeyRef:
              key: dex-application-id
              name: quality-dashboard-secrets
        image: quay.io/redhat-user-workloads/rhtap-qe-shared-tenant/quality-dashboard/frontend-quality-dashboard@sha256:4d75b39ae128cb293b6484c68518f7e75f9b98b808f3c25f81f062550bc4aa5d
        imagePullPolicy: Always
        name: quality-frontend-dashboard
        ports:
        - containerPort: 9000
          name: http
          protocol: TCP
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 512Mi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
status: {}
